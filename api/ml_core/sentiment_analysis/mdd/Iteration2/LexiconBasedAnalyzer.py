#######################################################
# 
# LexiconBasedAnalyzer.py
# Python implementation of the Class LexiconBasedAnalyzer
# Generated by Enterprise Architect
# Created on:      11-Nov-2024 11:16:01 PM
# Original author: stefan
# 
#######################################################
from .SentimentAnalyzer import SentimentAnalyzer

import re


class LexiconBasedAnalyzer(SentimentAnalyzer):
    def __init__(self):
        super().__init__()
        self.lexicon = {}

    def load_lexicon(self, lexicon_path):
        with open(lexicon_path, 'r') as file:
            for line in file:
                word, score = line.strip().split(',')
                self.lexicon[word.lower()] = float(score)

    def analyze(self, text):
        words = re.findall(r'\w+', text.lower())
        sentiment_score = 0
        count = 0

        for word in words:
            if word in self.lexicon:
                sentiment_score += self.lexicon[word]
                count += 1

        return sentiment_score / count if count > 0 else 0
