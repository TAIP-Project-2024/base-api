class TopicVisualizer:
    """
    TopicVisualizer visualizes topics generated by the topic model.
    Implements the Observer Pattern to update visualizations when topics change.
    """

    def __init__(self):
        self.observers = []  # List to hold registered observers

    def register_observer(self, observer):
        """
        Registers an observer for visualization updates.

        :param observer: An instance of an observer (e.g., a GUI or plot)
        """
        self.observers.append(observer)

    def notify_observers(self, topics):
        """
        Notifies all registered observers with the latest topics.

        :param topics: Updated list of topics
        """
        for observer in self.observers:
            observer.update(topics)

    def visualize(self, topics):
        """
        Generates a visualization of the given topics.

        :param topics: List of topics to visualize
        """
        # Notify observers with the new topics
        self.notify_observers(topics)
